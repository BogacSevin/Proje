{"remainingRequest":"C:\\Users\\Boğaç\\MyProject-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Boğaç\\MyProject-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Boğaç\\MyProject-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Boğaç\\MyProject-main\\src\\components\\Profil.vue?vue&type=template&id=ab833328&","dependencies":[{"path":"C:\\Users\\Boğaç\\MyProject-main\\src\\components\\Profil.vue","mtime":1655715327072},{"path":"C:\\Users\\Boğaç\\MyProject-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655474685000},{"path":"C:\\Users\\Boğaç\\MyProject-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655474685000},{"path":"C:\\Users\\Boğaç\\MyProject-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655474685000},{"path":"C:\\Users\\Boğaç\\MyProject-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1655474685000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}